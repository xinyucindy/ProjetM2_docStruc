<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../transformation/resultats.xsl"?>
<page>
    <t>Résultat : Répartition en graphique</t>
    <titre>Répartition en graphique</titre>
    <contenu>
        <partie>
            <pp>
                Ici vous retrouverez les graphiques que l'on a produit à partir du script python en bas de page.
            </pp>
        </partie>
        <partie>
            <presentation>
                Graphique : Répartition des types de pokémons différents sur tous les pokémons. Pour faire ce graphique nous avons dû récupérer tous les différents types de pokémon présents dans nos données ainsi que le nombre de fois où ces types apparaissent, pour ce faire nous avons fait appel au module Counter qui permet de créer un dictionnaire qui fait office de compteur. Avec ce dictionnaire nous avons donc ainsi pu avoir nos deux listes nécessaires pour l'utilisation du module matplotlib qui permet de créer des graphiques puis de les sauvegarder au format 'png'. Dans ce graphique on peut remarquer que la répartition entre les types de pokémons est assez disparate, les pokémons du type "Eau" pouvant correspondre jusqu'à 10.4% de la totalité de nos pokémons alors que les pokémons comme ceux du type "Glace" sont jusqu'à trois fois moins présents (3.1%).
            </presentation>
        </partie>
        <image>../web/img/types.png</image>
        <partie>
            <presentation>
                Graphique : Répartition des pokémons par génération. Pour faire ce graphique nous avons dû récupérer toutes les Générations présentes dans les données ainsi que le nombre de pokémon de cette même génération dans tout le document, pour ce faire nous avons fait appel au module Counter qui permet de créer un dictionnaire qui fait office de compteur. Avec ce dictionnaire nous avons donc ainsi pu avoir nos deux listes nécessaires pour l'utilisation du module matplotlib qui permet de créer des graphiques puis de les sauvegarder au format 'png'. Avec ce graphique nous pouvons observer assez facilement que les pokémons de la génération 6 sont jusqu'à deux fois moins nombreux que ceux des générations 1,3 ou 5. Après observation du classement des 10 meilleurs pokémons en attaque et en défense on remarque donc que le fait que la génération 6 soit moins peuplé que les autres générations, ne la rend pas moins plus "faible" que les autres générations. 
            </presentation>
        </partie>
        <image>../web/img/generations.png</image>
        <partie>
            <presentation>
                Graphique : Répartition du nombre de pokémons légendaire sur tous les pokémons. Pour faire ce graphique nous avons dû compter le nombre de pokémon légendaire présent dans le document à l'aide d'un compteur, puis connaissant déjà le nombre total de pokémon présent dans nos données il ne nous restait plus qu'à faire une petite soustraction pour récupérer les imformations qu'il nous fallait à l'utilisation du module matplotlib. Avec ce graphique on peut remarquer que les pokémons légendaires ne sont pas si peu nombreux que l'on pouvait s'y attendre. Sûrement dû au fait de la présence des pokémons qui peuvent avoir une évolution provisoire du type Méga, Primal etc.
            </presentation>
        </partie>
        <image>../web/img/legends.png</image>
        <telechargement>
            <fichier>
                <texte>Script Graphique</texte>
                <lien>../script/script.py</lien>
            </fichier>
        </telechargement>
    </contenu>
</page>